openapi: 3.0.3
info:
  description: API-REST End point to get price by data range
  license:
    name: MIT
    url: https://mit-license.org/
  title: Java Test
  version: 1.0.0
servers:
- url: /
paths:
  /price:
    get:
      description: Get actual price in a data range
      operationId: getByRange
      parameters:
      - description: Date to find price
        explode: true
        in: query
        name: date
        required: true
        schema:
          $ref: '#/components/schemas/CustomTimeDate'
        style: form
      - description: Product Id to search
        explode: true
        in: query
        name: prodId
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: Brand Id to search
        explode: true
        in: query
        name: brandId
        required: true
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
          description: price response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      x-accepts: application/json
components:
  schemas:
    Price:
      example:
        productId: 2
        endDate: 2023-05-13-17.30.02
        price: 0
        brandId: 1
        priceListId: 1
        startDate: 2023-05-13-17.30.02
      properties:
        productId:
          description: Product id
          example: 2
          format: int64
          type: integer
        brandId:
          description: Brand id
          example: 1
          format: int64
          type: integer
        priceListId:
          description: Price list id
          example: 1
          format: int64
          type: integer
        startDate:
          description: Date formatted as example
          example: 2023-05-13-17.30.02
          pattern: ^[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])-([01][0-9]|2[0-3](.[0-5][0-9]){2})$
          type: string
        endDate:
          description: Date formatted as example
          example: 2023-05-13-17.30.02
          pattern: ^[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])-([01][0-9]|2[0-3](.[0-5][0-9]){2})$
          type: string
        price:
          format: int64
          type: integer
      required:
      - brandId
      - endDate
      - price
      - priceListId
      - productId
      - startDate
      type: object
    CustomTimeDate:
      description: Date formatted as example
      example: 2023-05-13-17.30.02
      pattern: ^[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])-([01][0-9]|2[0-3](.[0-5][0-9]){2})$
      type: string
    Error:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      required:
      - code
      - message
      type: object

